{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"va",
				"val"
			],
			[
				"sear",
				"search_query"
			],
			[
				"get",
				"getJSON"
			],
			[
				"cre",
				"create_id"
			],
			[
				"create",
				"create_name"
			],
			[
				"se",
				"search_query"
			],
			[
				"ta",
				"table_loader"
			],
			[
				"on",
				"onclick	Attr"
			],
			[
				"Gae",
				"GaeFrontend	 ƒ"
			],
			[
				"Pa",
				"PagePath	string ʈ"
			],
			[
				"Trim",
				"TrimPrefix	string ƒ"
			],
			[
				"P",
				"Ptr	 Ɩ"
			],
			[
				"S",
				"Slice	 Ɩ"
			],
			[
				"Metho",
				"MethodSearchPlayers	 Ɩ"
			],
			[
				"int",
				"Interface	i interface{} ƒ"
			],
			[
				"St",
				"String	 Ɩ"
			],
			[
				"K",
				"Kind	reflect.Kind ƒ"
			],
			[
				"Pt",
				"PtrTo	reflect.Type ƒ"
			],
			[
				"E",
				"ErrNoSuchDocument	error ν"
			],
			[
				"Str",
				"StringID	string ƒ"
			],
			[
				"Ev",
				"EventId	string ʈ"
			],
			[
				"ev",
				"events	[]EventId ν"
			],
			[
				"Event",
				"EventEntity	struct ʈ"
			],
			[
				"VA",
				"ValueOf	reflect.Value ƒ"
			],
			[
				"STr",
				"Struct	 Ɩ"
			],
			[
				"V",
				"ValueOf	reflect.Value ƒ"
			],
			[
				"T",
				"TypeOf	reflect.Type ƒ"
			],
			[
				"D",
				"Done	error ν"
			],
			[
				"Kin",
				"KindPlayer	 Ɩ"
			],
			[
				"N",
				"NewQuery	*datastore.Query ƒ"
			],
			[
				"key",
				"keyExists	built-in ν"
			],
			[
				"Uni",
				"UnixNano	int64 ƒ"
			],
			[
				"Ne",
				"NewEncoder	*json.Encoder ƒ"
			],
			[
				"W",
				"Write	int, error ƒ"
			],
			[
				"For",
				"Form	url.Values ν"
			],
			[
				"Wr",
				"Write	int, error ƒ"
			],
			[
				"Bad",
				"StatusBadRequest	 Ɩ"
			],
			[
				"PA",
				"Path	string ν"
			],
			[
				"CR",
				"CreatePlayer	error ƒ"
			],
			[
				"Pla",
				"Player	struct ʈ"
			],
			[
				"Not",
				"StatusNotFound	 Ɩ"
			],
			[
				"Met",
				"MethodCreatePlayer	 Ɩ"
			],
			[
				"p",
				"Path	string ν"
			],
			[
				"Even",
				"EventEntity	struct ʈ"
			],
			[
				"Kind",
				"KindEvent	 Ɩ"
			],
			[
				"Pl",
				"Player	struct ʈ"
			],
			[
				"Round",
				"RoundId	string ʈ"
			],
			[
				"eve",
				"EventId	string ʈ"
			],
			[
				"Eve",
				"EventId	string ʈ"
			],
			[
				"Err",
				"ErrNoSuchEntity	error ν"
			],
			[
				"Ba",
				"BackendKind	string ʈ"
			],
			[
				"New",
				"NewByTieBreakers	ByTieBreakers ƒ"
			],
			[
				"Ma",
				"MatchWinRates	map[Player]float64 ν"
			],
			[
				"M",
				"MatchWinRates	map[Player]float64 ν"
			],
			[
				"Play",
				"PlayerSlice	[]Player ʈ"
			],
			[
				"gam",
				"gameWinRates	map[Player]float64 ν"
			],
			[
				"game",
				"gamesPlayed	map[Player]int ν"
			],
			[
				"math",
				"match	Match ν"
			],
			[
				"round",
				"roundsPlayed	map[Player]int ν"
			],
			[
				"roun",
				"roundsPlayed	map[Player]int ν"
			],
			[
				"mat",
				"matchPoints	map[Player]int ν"
			],
			[
				"r",
				"round	Round ν"
			],
			[
				"A",
				"activePlayers	map[Player]interface{} ν"
			],
			[
				"Player",
				"PlayerSlice	[]Player ʈ"
			],
			[
				"In",
				"Interface	interface ¡"
			],
			[
				"chec",
				"checkNames	[]string ν"
			],
			[
				"CheckNi",
				"CheckNillable	 Ɩ"
			],
			[
				"Chec",
				"CheckContainer	 Ɩ"
			],
			[
				"CheckN",
				"CheckNillable	 Ɩ"
			],
			[
				"Check",
				"CheckNotEmpty	 Ɩ"
			],
			[
				"Che",
				"CheckNegative	 Ɩ"
			],
			[
				"check",
				"checkKind	error ƒ"
			],
			[
				"con",
				"containerKinds	map[reflect.Kind]interface{} ν"
			],
			[
				"che",
				"checkNillable	error ƒ"
			],
			[
				"sign",
				"signNone	 Ɩ"
			],
			[
				"is",
				"isPositive	built-in ν"
			],
			[
				"si",
				"signNegative	 Ɩ"
			],
			[
				"co",
				"Complex64	 Ɩ"
			],
			[
				"C",
				"Complex128	 Ɩ"
			],
			[
				"F",
				"Float64	 Ɩ"
			],
			[
				"Int",
				"Int32	 Ɩ"
			],
			[
				"Ui",
				"Uint64	 Ɩ"
			],
			[
				"checkN",
				"checkNumeric	error ƒ"
			],
			[
				"Chc",
				"CheckPositive	 Ɩ"
			],
			[
				"ErrorE",
				"ErrorIllegalCheck	struct ʈ"
			],
			[
				"Erro",
				"ErrorIllegalCheck	struct ʈ"
			],
			[
				"isN",
				"isNillable	bool ƒ"
			],
			[
				"Spr",
				"Sprintf	string ƒ"
			],
			[
				"ErrorCheck",
				"errorCheckFailed	struct ʈ"
			],
			[
				"ch",
				"checks	[]string ν"
			],
			[
				"ni",
				"nillable	bool ν"
			],
			[
				"str",
				"str2check	map[string]Check ν"
			],
			[
				"sor",
				"sortedFields	[]Field ν"
			],
			[
				"st",
				"strconv	 package ρ"
			],
			[
				"bu",
				"buildDeeperNumber	[]int ƒ"
			],
			[
				"Error",
				"ErrorInvalidKind	struct ʈ"
			],
			[
				"Er",
				"ErrorNilValue	struct ʈ"
			],
			[
				"Pr",
				"Println	n int, err error ƒ"
			],
			[
				"fa",
				"failLines	[]string ν"
			],
			[
				"Inter",
				"InterfaceValue	namedValue ƒ"
			],
			[
				"Is",
				"IsRequired	bool ƒ"
			],
			[
				"I",
				"IsRequired	bool ƒ"
			],
			[
				"Field",
				"FieldInfo	*reflect.StructField ν"
			],
			[
				"Fie",
				"FieldInfo	*reflect.StructField ν"
			],
			[
				"Strut",
				"StructField	struct ʈ"
			],
			[
				"Val",
				"ValueOf	reflect.Value ƒ"
			],
			[
				"Va",
				"ValueOf	reflect.Value ƒ"
			],
			[
				"que",
				"queue	*list.List ν"
			],
			[
				"q",
				"queuedPointers	map[uintptr]interface{} ν"
			],
			[
				"Ty",
				"Type	interface ¡"
			],
			[
				"t",
				"Type	reflect.Type ν"
			],
			[
				"Gith",
				"GithubIssue	struct ʈ"
			],
			[
				"Fri",
				"FreshdeskApiKey	 Ɩ"
			],
			[
				"re",
				"Reset	 ƒ"
			],
			[
				"Github",
				"GithubIssueAction	string ʈ"
			],
			[
				"Path",
				"PathGithubIssueComment	 Ɩ"
			],
			[
				"Wel",
				"WeldrAction	struct ʈ"
			],
			[
				"Fr",
				"FreshdeskApiKey	 Ɩ"
			],
			[
				"heade",
				"headerSum	string ν"
			],
			[
				"En",
				"EncodeToString	string ƒ"
			],
			[
				"Han",
				"HandleFunc	 ƒ"
			],
			[
				"git",
				"githubHook	 ƒ"
			],
			[
				"status",
				"StatusForbidden	 Ɩ"
			],
			[
				"hea",
				"headerSigs	 ν"
			],
			[
				"Re",
				"ResponseWriter	interface ¡"
			],
			[
				"Respon",
				"ResponseWriter	interface ¡"
			],
			[
				"head",
				"headerSum	[]byte ν"
			],
			[
				"sig",
				"sigtokens	[]string ν"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "<html ng-app=\"index\">\n    <head>\n        <link rel=\"stylesheet\" href=\"/static/bootstrap/dist/css/bootstrap.css\">\n        <script type=\"text/javascript\" src=\"/static/etc/angular.min.js\"></script>\n        <script type=\"text/javascript\" src=\"/static/src/index.js\"></script>\n    </head>\n    <body>\n    <navbar></navbar><br>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div>\n            <label>Name:</label>\n            <input type=\"text\" ng-model=\"yourName\" placeholder=\"Enter a name here\">\n            <hr>\n            <h1>Hello {{yourName}}!</h1>\n        </div>\n    </div>\n</body>\n</html>",
			"file": "static/index.html",
			"file_size": 614,
			"file_write_time": 130609131500000000,
			"settings":
			{
				"buffer_size": 614,
				"line_ending": "Unix"
			}
		},
		{
			"file": "static/tpl/navbar.tpl",
			"settings":
			{
				"buffer_size": 857,
				"line_ending": "Unix"
			}
		},
		{
			"file": "static/src/index.js",
			"settings":
			{
				"buffer_size": 212,
				"line_ending": "Unix"
			}
		},
		{
			"file": "frontend/frontend.go",
			"settings":
			{
				"buffer_size": 675,
				"line_ending": "Unix"
			}
		},
		{
			"file": "backend/backend.go",
			"settings":
			{
				"buffer_size": 2421,
				"line_ending": "Unix"
			}
		},
		{
			"file": "helpers.go",
			"settings":
			{
				"buffer_size": 1070,
				"line_ending": "Unix"
			}
		},
		{
			"file": "model.go",
			"settings":
			{
				"buffer_size": 5922,
				"line_ending": "Unix"
			}
		},
		{
			"file": "backend/errors.go",
			"settings":
			{
				"buffer_size": 341,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gae/frontend_gae.go",
			"settings":
			{
				"buffer_size": 303,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gae/backend_gae.go",
			"settings":
			{
				"buffer_size": 3796,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gae/helpers_gae.go",
			"settings":
			{
				"buffer_size": 1007,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gae/app.yaml",
			"settings":
			{
				"buffer_size": 243,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"ht",
				"HTMLBeautify"
			],
			[
				"htm",
				"HTMLBeautify"
			],
			[
				"java",
				"Javascript Beautify"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"format",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pref",
				"Preferences: Settings - Default"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"blo",
				"Toggle Block Comment"
			],
			[
				"comm",
				"Toggle Block Comment"
			],
			[
				"commen",
				"Toggle Block Comment"
			],
			[
				"san",
				"GoSublime: Do a sanity check"
			],
			[
				"sanity",
				"GoSublime: Do a sanity check"
			],
			[
				"prett",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"gosublime",
				"GoSublime: Do a sanity check"
			],
			[
				"gosublim",
				"GoSublime: User Settings"
			],
			[
				"gosb",
				"GoSublime: Do a sanity check"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Package Control: Remove Package"
			],
			[
				"gosubl",
				"GoSublime: Run Tests"
			],
			[
				"add pa",
				"GoSublime: Add/Remove package"
			],
			[
				"gosublime ",
				"GoSublime: Add/Remove package"
			],
			[
				"gosu",
				"GoSublime: Browse Packages"
			],
			[
				"term",
				"Preferences: Terminal Settings – Default"
			],
			[
				"terminal",
				"Preferences: Terminal Settings – User"
			],
			[
				"pretty ",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"prettyy",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pretty",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"gosubli",
				"GoSublime: Browse Packages"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"Package Con",
				"Package Control: Install Package"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"Package Control: Install Package",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/static/frontend/dashboard.css",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/static/html/players.html",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/static/frontend/dashboard.js",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/static/frontend/index.html",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/static/frontend/navbar.tpl",
		"/Users/jamesribe/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/static/html/bootstrap.html",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/static/src/players.js",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/static/tpl/players.tpl",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/backend/model.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/app.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/backend/helpers_gae.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/backend/backend_gae.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/frontend.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/errors.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/helpers_gae.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/backend_gae.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/model.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/backend.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/structcheck_test.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/errors.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/structcheck.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/helpers.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/overview.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/checks.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/structcheck",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/doc.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/README.md",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/checkers.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/structcheck/.git/MERGE_MSG",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/util.go",
		"/Users/jamesribe/Library/LaunchAgents/local.env.plist",
		"/Library/LaunchDaemons/local.environment.plist",
		"/usr/local/etc/launch/environment.sh",
		"/Library/LaunchDaemons/local.godoc.monitor.plist",
		"/Library/LaunchDaemons/local.godoc.server.plist",
		"/usr/local/etc/launch/godoc.sh",
		"/etc/environment",
		"/etc/environment.sh",
		"/Users/jamesribe/godoc.sh",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/events.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/bootstrap/bootstrap",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/bootstrap/client.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/extern/freshdesk/freshdesk.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/weldr.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/extern/freshdesk/example-ticket.json",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/etc/freshdesk-config.json",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/extern/freshdesk/freshdesk_test.go",
		"/Users/jamesribe/tmp/foo.json",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/etc/github-config.json",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/ingress/main.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/processing/main.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/weldr_test.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/etc/freshdesk-config.json.example",
		"/Users/jamesribe/bin/fd_api.py",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/gae.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/github_integ_test.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/extern/freshdesk/example-client.json",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/extern/freshdesk/freshdesk_integ_test.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/extern/freshdesk/integ-tests/freshdesk_test.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/github-integ_test.go",
		"/Users/jamesribe/bin/fd-curl.py",
		"/Users/jamesribe/bin/freshdeskcurl.sh",
		"/Users/jamesribe/tmp/foo",
		"/Users/jamesribe/tmp/bar",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/weldr.",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/ingress/ingress.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/processing/processing.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/dispatch.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/default/default.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae-processing/queue.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/.gitignore",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/deploy.sh",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/serve.sh",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/common.sh",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/default/main.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae-processing/main.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/app.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae-ingress/app.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae-processing/app.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae-ingress/main.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/extern/freshdesk/weldrex.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/weldrex/weldrex.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/weldrex/freshdesk_test.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/weldrex/freshdesk.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/weldrex/integ-tests/freshdesk_test.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae-processing/github-freshdesk.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/apis/freshdesk/freshdesk_test.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/apis/freshdesk/freshdesk.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/apis/freshdesk/integ-tests/freshdesk_test.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/queue.yaml",
		"/Users/jamesribe/Library/Application Support/Sublime Text 3/Packages/User/GoSublime.sublime-settings",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/github-freshdesk.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/apis/freshdesk/example-ticket.json",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/etc/README",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/etc/github-config.json.example",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/hooks/github/github.go",
		"/Users/jamesribe/git/GoSublime/.gitmodules",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/etc/github.api-key",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/apis/freshdesk/freshdesk-integ-tests/main.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/apis/freshdesk/example-client.json",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/etc/README",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/etc/freshdesk.api-key",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/common.go",
		"/Users/jamesribe/versions.csv",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/entities.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/passwd-gen/app.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/passwd-gen/main.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/weldr/github-freshdesk.sublime-project",
		"/etc/launchd.conf",
		"/Users/jamesribe/.zshrc",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/github-freshdesk/app.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/github-freshdesk/queue.yaml",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/github-freshdesk/common/common.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/github-freshdesk/gae/github-freshdesk.go",
		"/Library/LaunchDaemons/godoc.plist",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/github-freshdesk/github/github.go",
		"/Users/jamesribe/golang/src/github.com/Manbeardo/github-freshdesk/common.go",
		"/Users/jamesribe/go_appengine/gopath/src/github.com/Manbeardo/jamesribe-home/.gitignore",
		"/Users/jamesribe/go_appengine/gopath/src/github.com/Manbeardo/github-freshdesk/github/queue/queue.go",
		"/Users/jamesribe/go_appengine/gopath/src/github.com/Manbeardo/github-freshdesk/github-freshdesk.sublime-workspace",
		"/Users/jamesribe/git/offcamberdata/scripts/post-macdeployqt.sh",
		"/Users/jamesribe/git/offcamberdata/common.pri",
		"/Users/jamesribe/git/offcamberdata/qt-client/qt-client.pro",
		"/Users/jamesribe/golang/src/github.com/rainycape/magick/gif.c",
		"/Users/jamesribe/git/offcamberdata/scripts/JwtTools.py",
		"/Users/jamesribe/git/offcamberdata/scripts/SignGaeJwt.py",
		"/Users/jamesribe/Library/Application Support/Sublime Text 3/Packages/User/Terminal.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"nav item",
			"../../dist",
			"dist",
			"json.NewEncoder(w).Encode",
			"GaeBackend",
			"GaeHandler",
			"EventId",
			"Player",
			"e.Player",
			"Player",
			"e",
			"eventreporter",
			"e",
			"loadAndValidate",
			"writeError",
			"eventreporter",
			"BackendMethodPath",
			"MethodPath",
			"SearchReadAll",
			"Less",
			"less",
			"Round",
			"activePlayers",
			"rounds",
			"matchId",
			"eventId",
			"rounds",
			"activePlayers",
			"Players",
			"PlayerSlice",
			"bmp.Player2points",
			"p2points",
			"Nillable",
			"Checks",
			"o",
			"KindClass",
			"container",
			"numeric",
			"nillable",
			"kindClass",
			"metaValue",
			"checkFailed",
			"checknotnil",
			"lower",
			"metaValue",
			"MetaValue",
			"CheckSignless",
			"isNegative",
			"top",
			"NewField",
			"ErrorNilValue",
			"name2checks",
			"badFields",
			"name",
			"Name",
			"deeperName",
			"namedValue",
			"WeldrAction",
			"RemoveWeld",
			"writeError",
			"key",
			"headersig",
			"sigheader",
			"3b1999d8b42a",
			"WeldrConfig",
			"client",
			"Weldr",
			"todo",
			"Origin",
			"origin",
			"f.Config",
			"issue.RepoName",
			"issue.RepoOwner",
			"// DEBUG",
			"//DEBUG",
			"newWeldSite",
			"g",
			"\"",
			"config",
			"clientFile",
			"github",
			"GaeLinkStore",
			"err",
			"GoodApiKey",
			"header_tokens",
			"Date",
			"Freshdesk",
			"freshdesk",
			"Freshdesk",
			"FreshdeskDate",
			"autho",
			"Basic",
			"User",
			"Credentials",
			"AuthMethod",
			"Status",
			"ticketWrapper",
			"DigitPolicy",
			",omitempty",
			"330",
			"DEBUG",
			"http(",
			"hostname",
			"ENABLED_E",
			"ENABLED_EDITIONS",
			"FRAMEWORK_DIR",
			"appSign",
			"QT_",
			"config",
			"git",
			"gif_lib",
			"1.6",
			"record",
			"encodeBody",
			"card_name",
			"seller.BotInfo",
			"bot2card2orders",
			"BuyListing",
			"SellListing",
			"CardDetailsMap",
			"SellInfo",
			"byValue",
			"_trade",
			"trade",
			"CardInfoMap",
			"flag.Args()",
			"esponse.Card.Set_name",
			"go_err"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "static/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 614,
						"regions":
						{
						},
						"selection":
						[
							[
								410,
								410
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "static/tpl/navbar.tpl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 857,
						"regions":
						{
						},
						"selection":
						[
							[
								841,
								841
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "static/src/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 212,
						"regions":
						{
						},
						"selection":
						[
							[
								187,
								187
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "frontend/frontend.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 675,
						"regions":
						{
						},
						"selection":
						[
							[
								534,
								534
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "backend/backend.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2421,
						"regions":
						{
						},
						"selection":
						[
							[
								1326,
								1326
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "helpers.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1070,
						"regions":
						{
						},
						"selection":
						[
							[
								1039,
								1039
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "model.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5922,
						"regions":
						{
						},
						"selection":
						[
							[
								138,
								138
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "backend/errors.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 341,
						"regions":
						{
						},
						"selection":
						[
							[
								159,
								159
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "gae/frontend_gae.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 303,
						"regions":
						{
						},
						"selection":
						[
							[
								299,
								299
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "gae/backend_gae.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3796,
						"regions":
						{
						},
						"selection":
						[
							[
								270,
								270
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "gae/helpers_gae.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1007,
						"regions":
						{
						},
						"selection":
						[
							[
								32,
								32
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "gae/app.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 243,
						"regions":
						{
						},
						"selection":
						[
							[
								243,
								243
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter":
	{
		"height": 212.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/eventreporter/backend":
	{
		"height": 303.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/structcheck":
	{
		"height": 368.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr":
	{
		"height": 303.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/apis/freshdesk":
	{
		"height": 356.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/apis/freshdesk/integ-tests":
	{
		"height": 159.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/extern/freshdesk":
	{
		"height": 284.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/extern/freshdesk/integ-tests":
	{
		"height": 280.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae":
	{
		"height": 164.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae-processing":
	{
		"height": 100.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/ingress":
	{
		"height": 100.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/gae/processing":
	{
		"height": 100.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/weldrex":
	{
		"height": 251.0
	},
	"output.9o:///Users/jamesribe/golang/src/github.com/Manbeardo/weldr/weldrex/integ-tests":
	{
		"height": 323.0
	},
	"output.GoSublime-main-output":
	{
		"height": 100.0
	},
	"output.GoSublime-output":
	{
		"height": 424.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "eventreporter.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/golang/src/github.com/Manbeardo/weldr/extern/freshdesk/extern-freshdesk.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 218.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
